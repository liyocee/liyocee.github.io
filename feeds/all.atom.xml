<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Liyosi</title><link href="http://liyosi.com/" rel="alternate"></link><link href="http://liyosi.com/feeds/all.atom.xml" rel="self"></link><id>http://liyosi.com/</id><updated>2016-08-22T07:00:00+03:00</updated><entry><title>26 Things That 26 Years have taught me</title><link href="http://liyosi.com/blog/2016/Aug/22/26_birthday/" rel="alternate"></link><published>2016-08-22T07:00:00+03:00</published><author><name>Liyosi Collins</name></author><id>tag:liyosi.com,2016-08-22:blog/2016/Aug/22/26_birthday/</id><summary type="html">

&lt;p&gt;Monday, 22nd August, 2016 marks my 26th birthday. The 26 years that I have been around are marked by many adventures, failures,  successes, happy and sad moments,  all in competing proportions.&lt;/p&gt;
&lt;p&gt;There is one thing I cannot discount though,  that every single experience has helped shape the present me. I've compiled a list of 26 things that I pretend to have learned, as I turn 26, just to remind myself..
&lt;/p&gt;
&lt;p&gt;Here we go:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You cannot be everything to everyone, so just be you, be your authentic self.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Six Pack, Abs, Beachbody are all a wild-goose chase. Exercise and workout for mental clarity &amp;amp; strength, strong willpower and any other reason that need not be physically manifested just for scoring some external validation, or winning over that pretty mating mate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google/Research people before meeting them - Learn about their interests, things they are passionate about, their hobbies and anything else you may un-earth.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sex is a painkiller and a mind tranquilizer. Have it often.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stay grounded, be humble, have empathy and be nice to people. Don't let whatever you may have achieved or amassed or become get into your head.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Never crave for any sort of social validation or external validation, especially in this &lt;strong&gt;likes&lt;/strong&gt; craze days. Just be true to self.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Happiness = Reality/Expectations . Calibrate and manage your expectations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The grind, the process of doing/building something should be as fascinating as the end result. Don't be fixated so much on the end that you miss to celebrate the small scores that you hit along the way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embrace the power of compounding, in everything. 1% compounded everyday is 36500% in a year.Figure out how to improve 1% everyday on things
you deeply care about&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dont burn bridges, you only connect the dots looking backwards.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You are damned if you do and damned if you don't , so you better do you and ignore the critics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The fewer things you own, the fewer things own you. Throw out the chaff and endevor to be a minimalist.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kaizen - keep on getting better. Never aspire for drastic big shot changes in your life, endevor for small, incremental and progressive changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can never know how it feels like unless you are in the arena, with your sleeves rolled up and
that sweat trickling down. So don't judge others, you never know what they been through or currently undergoing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Job security is a myth in this knowledge economy. You are dispensable, everyone is. The only security there's is you, your brand, your skillset, your portfolio and your network. Put in some effort in building those.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everyone is an entrepreneur. Everyone, whether employed or not, usually has got something on the side he/she does to make those extra bucks. The only difference is at what scale and with how much dedication they do it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It's better to ask for forgiveness than permission.Just go straight a head and do whatever you want to do.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To get what you have never had,you must do what you have never done.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consistence and skill beats talent; everytime, every minute. Show up everyday.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be grateful for everything you have.  Your current reality is someone's else dream. But gratitude doesn't mean comfort, don't confuse the two, don't get comfortable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Who your spouse will be is the most important career decision you will ever make. I don't have a spouse yet but I just know this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Business is about creating value to your customers. No value = No Customers = No profits = No business. Donâ€™t believe your own hype or ride on startups craze wave.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Surround yourself with the right people; just a few; who cheers you on and gives it to you straight, without sugar coating anything. We are social beings after all.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The choices you make will be your biography tomorrow.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The last safe investment that can never go wrong,  is investment in yourself. Investment in your relantionships, health, creativity, personal growth...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sleep, sleep and sleep. Burn out is no fun and those poly-phasic sleep hacks are a hoax. Do atleast 8hrs a night. Our bodies need to re-create themselves.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;....and most importantly, believe in something bigger, bigger than yourself. A power that be, that guides you around
amidst all the craze in the world, that makes you remain focused on your true north.&lt;/p&gt;
&lt;p&gt;Please add to the list, the ones you may have learned ...so that I don't re-learn them the hard way.&lt;/p&gt;</summary><category term="Motivation"></category><category term="Birthday"></category><category term="Life Lessons"></category></entry><entry><title>Static Sites - What I learned putting together this blog, Part 2</title><link href="http://liyosi.com/blog/2016/Aug/17/pelican_101_basics/" rel="alternate"></link><published>2016-08-17T09:00:00+03:00</published><author><name>Liyosi Collins</name></author><id>tag:liyosi.com,2016-08-17:blog/2016/Aug/17/pelican_101_basics/</id><summary type="html">

&lt;p&gt;This is Part 2 on a step by step guide on how to get your hands dirty with  pelican, &lt;strong&gt;a python based static site generator&lt;/strong&gt;, to put together a personal blog and have it published online without spending a dime. Part 1 of this post can be found &lt;a href="http://liyosi.com/blog/2016/Aug/12/static_sites/"&gt;here&lt;/a&gt; .&lt;/p&gt;


&lt;p&gt;&lt;a __blank_="'_blank'" href="http://docs.getpelican.com/en/3.6.3/index.html" target:="target:"&gt;Pelican&lt;/a&gt; is a very nice to have tool in your  arsenal,  for any creative. As I tinkered with it when assembling this blog, I learned a few things that I thought it would be nice to share for anyone who would want to get started on it.&lt;/p&gt;
&lt;p&gt;Let's dive right into it:&lt;/p&gt;
&lt;h1&gt;Setting up the project&lt;/h1&gt;
&lt;hr /&gt;
&lt;h4&gt;1.  Creating Project Repository&lt;/h4&gt;
&lt;p&gt;Head to &lt;a href="http://github.com" targe="_blank"&gt;Github&lt;/a&gt; and create a github repository for the project source's code. Inorder for you to be able to use github as your CDN(Content Delivery Network) to serve your blog when published, the repository has to be named as: &lt;code&gt;your_github_username.github.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Creating Github Pages Reposiotry" src="http://liyosi.com/blog/tech/gh_pages.png" /&gt;&lt;/p&gt;
&lt;p&gt;This way, github will recognise the project as Github Pages and be able to serve it as a static site when you visit:
&lt;code&gt;http://your_github_username.github.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You see, no need to spend a dime to buy some domain and hosting space somewhere so as to be able to create you digital presence. Times have never been so exciting !&lt;/p&gt;
&lt;h4&gt;2. Cloning the project and setting up relevant git branches&lt;/h4&gt;
&lt;p&gt;Clone the project repository:
    &lt;code&gt;git clone https://github.com/your_githib_username/your_github_username.github.io&lt;/code&gt; .
Then create a local &lt;strong&gt;dev&lt;/strong&gt; branch, switching to it at the same time:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd your_github_username.github.io
git checkout -b dev
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;3. Installing project dependencies&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Create a &lt;strong&gt;requirements.txt&lt;/strong&gt; file in the project root folder and put a bunch of project dependencies:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;requirements.txt&lt;/em&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;beautifulsoup4==4.5.1
blinker==1.4
docutils==0.12
feedgenerator==1.8
Jinja2==2.8
Markdown==2.6.6
MarkupSafe==0.23
pelican==3.6.3
Pillow==3.3.0
Pygments==2.1.3
python-dateutil==2.5.3
pytz==2016.6.1
six==1.10.0
smartypants==1.8.6
typogrify==2.0.7
Unidecode==0.4.19
webassets==0.11.1
Fabric==1.12.0
ghp-import==0.4.1
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create  a python virtual enviroment for the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install virtualenv via pip if you don't have it installed already:
    &lt;code&gt;pip install virtualenv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create virtual environment for the project:
    &lt;code&gt;virtualenv venv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ignore the  created virtual environmennt folder from being tracked by git:
    &lt;code&gt;echo '/venv' &amp;gt;&amp;gt; .gitignore&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Activate the python virtual enviroment:
    &lt;code&gt;source venv/bin/activate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then install project dependencies from the requirements file:
   &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Generating Pelican's Initial files&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;Running &lt;code&gt;pelican-quickstart&lt;/code&gt; on your terminal will ask you a bunch of questions as it generates the static site.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note,&lt;/strong&gt; On the:  &lt;code&gt;&amp;gt; Where do you want to create your new web site? [.]&lt;/code&gt; question, provide &lt;code&gt;source&lt;/code&gt; so
that the generated files are put in the source folder.&lt;/p&gt;
&lt;h1&gt;Creating your first article and Previewing the generated site&lt;/h1&gt;
&lt;hr /&gt;
&lt;h4&gt;1. Create your first article&lt;/h4&gt;
&lt;p&gt;Use your preferred text editor and create your first article with the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;Article&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blogging_101&lt;/span&gt;

&lt;span class="n"&gt;Yeay&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;shot&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;blogging&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Given that this example article is in &lt;strong&gt;Markdown&lt;/strong&gt; format(you can use any format you like .rst), save it
in the &lt;code&gt;content&lt;/code&gt; folder of the sorce directory with a &lt;em&gt;.md&lt;/em&gt; file extension.&lt;/p&gt;
&lt;h4&gt;2. Generate your site&lt;/h4&gt;
&lt;p&gt;From your site directory, in the source folder, run the &lt;code&gt;pelican&lt;/code&gt; command to generate your site:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican content
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;3. Preview your site&lt;/h4&gt;
&lt;p&gt;Open a new terminal session and run the following commands to switch to your
&lt;code&gt;output&lt;/code&gt; directory and launch Pelican's web server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd ~/your_project_directory/source/output
python -m pelican.server
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Preview your site by navigating to &lt;code&gt;http://localhost:8000/&lt;/code&gt; in your browser.&lt;/p&gt;
&lt;h1&gt;Publishing your site&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;To publish your site, we will use python's fabric automation tool to automate a bunch of commands.&lt;/p&gt;
&lt;p&gt;Replace the contents of the &lt;code&gt;fabfile.py&lt;/code&gt; file in the &lt;code&gt;source folder&lt;/code&gt; with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fabric.api&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;shutil&lt;/span&gt;
&lt;span class="c1"&gt;# Local path configuration (can be absolute or relative to fabfile)&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deploy_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;output&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEPLOY_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deploy_path&lt;/span&gt;
&lt;span class="c1"&gt;# Github Pages configuration&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github_pages_branch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;master&amp;quot;&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Remove generated files&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DEPLOY_PATH&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rmtree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DEPLOY_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DEPLOY_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;gh_pages&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Publish to GitHub Pages&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pelican -s publishconf.py&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ghp-import -b {github_pages_branch} {deploy_path}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;git push origin {github_pages_branch}&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;gh_pages&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Update your &lt;code&gt;publishconf.py&lt;/code&gt; file in the &lt;code&gt;source&lt;/code&gt; folder so as it looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;curdir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelicanconf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://your_github_username.github.io&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;


&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/all.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.atom.xml&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To publish your site, run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fab publish
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Congrats, your have just created and published your blog using pelican. Preview your blog by navigating to &lt;code&gt;http://your_github_username.github.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Remember to commit and push your changes upstream, on your github repository:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd &amp;lt;your_project_folder&amp;gt;
git add .
git commit -m &amp;#39;Generated my blog using pelican&amp;#39;
git push origin dev   # push to the dev branch upstream
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the next post, I will be delving deeper into:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Understanding the folders and files that were generated by pelican&lt;/li&gt;
&lt;li&gt;How to spruce up the generated site to your taste by using custom themes&lt;/li&gt;
&lt;li&gt;How to organize and structure your blog files , in my opionated way&lt;/li&gt;
&lt;li&gt;How to publish your blog on your custom domain&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Static Sites"></category><category term="Pelican 101"></category><category term="Tech"></category><category term="Github Pages"></category></entry><entry><title>Static Sites - What I learned putting together this blog, Part 1</title><link href="http://liyosi.com/blog/2016/Aug/12/static_sites/" rel="alternate"></link><published>2016-08-12T09:00:00+03:00</published><author><name>Liyosi Collins</name></author><id>tag:liyosi.com,2016-08-12:blog/2016/Aug/12/static_sites/</id><summary type="html">

&lt;p&gt;When it comes to assembling a static site, the technology ecosystem is littered with countless tools,
each with its own strengths, shortcomings and philosophy. I set out to set my own biased criteria as to what
a best tool should meet, and here is what I put together...
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Having options is the Ultimate Freedom&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I wanted to put together a simple, static personal blog that met the following three major criteria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding posts should be done in plain text in an a text editor that I like : &lt;strong&gt;Sublime Text&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Publishing the added posts online should be done in just &lt;strong&gt;one&lt;/strong&gt; command&lt;/li&gt;
&lt;li&gt;My published blog should be served from any CDN - Content Delivery Network , of my choice&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, I started exploring the tools available in my arsenal that could meet the above criteria, and below
is what I found out:&lt;/p&gt;
&lt;h1&gt;1. Content Management Systems(CMSs):&lt;/h1&gt;
&lt;p&gt;They come in all shapes and sizes, ranging from Wordpress, Drupal, Django CMS , Joomla and many others.&lt;/p&gt;
&lt;p&gt;Of my particular interest was Wordpress because it's widely used and mostly touted to be
&lt;strong&gt;the tool to be&lt;/strong&gt;, when it comes to putting together a personal blog.&lt;/p&gt;
&lt;p&gt;These CMS tools are very good for a different audience and different purposes, but for me, they just couldn't fit my criteria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Yes, they give you &lt;em&gt;fancy editors&lt;/em&gt; to create your content, without you having to bang your head with
those html tags&lt;/li&gt;
&lt;li&gt;Yes, they ship with many templates and have large communities around them building very nice templates
that one can adopt to put together a well designed blog/webiste&lt;/li&gt;
&lt;li&gt;Yes, they have plugins for anything, some free ,some premium and some fremium for an extra functionality
you may need that doesn't come shipped with the core underlying tool&lt;/li&gt;
&lt;li&gt;Yes, the give one several options for publishing their content online, with the likes of wordpress
eliminating the whole fuss altogether by allowing you to just do everything on their online tools&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But for me, the above just didn't cut it to make me want to adopt any of them.&lt;/p&gt;
&lt;p&gt;Adopting any one of them would me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My content shoud conform to the lingua that each tool has prescribed&lt;/li&gt;
&lt;li&gt;That once I get started using one of them, I would be locked in and even if it reaches a point when I just don't like it; just tossing it away and moving on to the next tool would be quite a hassle, especially porting my content&lt;/li&gt;
&lt;li&gt;That there's no way I could get my content published to any CDN of my choice, &lt;em&gt;I stand corrected&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;That I would have to put up with a lot of bloated code and nothingness that my published content end up being bundled with, with a lot of functionality that I cannot and will never need&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hence, I moved on to:&lt;/p&gt;
&lt;h1&gt;2. Static Sites Generators:&lt;/h1&gt;
&lt;p&gt;They too come in all shapes and sizes, ranging from Pelican, Jekyll, Middleman, Brunch, GitBook, MkDocs, Cactus, Nikola ; just to mention a few.&lt;/p&gt;
&lt;p&gt;Each one of them has got its initial learning cover, its own strengths and its own shortcomings.&lt;/p&gt;
&lt;p&gt;I personally tinkered with Pelican(Python Based) and Middleman(Ruby based) and yeah, they just met my needs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each one of them allowed me to write my posts in plain text, ofcourse giving you options to spruce it up using simple, lightweight syntaxes like Markdown and .rst&lt;/li&gt;
&lt;li&gt;They didn't get in my way as to which editor to use for writting the posts&lt;/li&gt;
&lt;li&gt;They allowed me to publish my content with just one command, ofcourse with a few one-off  configurations I had to do&lt;/li&gt;
&lt;li&gt;They allowed me to publish my content to any CDN of my choice, and I ended up publishing the content to Github Pages(gh-pages)&lt;/li&gt;
&lt;li&gt;And Yeah, they didn't just shove anything down my throat - (I like having options and freedom that comes with it)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I ended up going with Pelican, not for any particular shortcomings that Middleman might have had, but just because I consider myself a Pythonista.&lt;/p&gt;
&lt;p&gt;Apart from this blog, I also put up this &lt;a href="http://zeptohub.com" target="blank"&gt;site&lt;/a&gt; using the Pelican Generator and hosted by Github Pages CDN, just to push the limits as to what these static sites generators are capable of.&lt;/p&gt;
&lt;p&gt;In the &lt;a href="http://liyosi.com/blog/2016/Aug/17/pelican_101_basics/"&gt;next post&lt;/a&gt;, I will delve deeper on how I used Pelican to put up this blog and this &lt;a href="http://zeptohub.com" target="blank"&gt;website&lt;/a&gt;.&lt;/p&gt;</summary><category term="Static Sites"></category><category term="CMS"></category><category term="Blogging Tools"></category><category term="Tech"></category></entry></feed>